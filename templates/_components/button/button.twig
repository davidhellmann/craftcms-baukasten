{# >>> Comp Settings #}
{% set compDefaults = {
  settings: {
    name: 'c-button',
  },
  data: {
    variant: 'primary',
    variantSize: 'md',
    icon: null,
    iconSize: 'sm',
    text: null,
    url: null,
    reverse: false,
    target: null,
  },
  classes: {
    root: 'items-center border border-transparent font-bold focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-primary-600',
    custom: '',
    display: 'inline-flex',
    rounded: 'rounded-md'
  },
  variants: {
    primary: 'text-white bg-primary-700 hover:bg-primary-800 group-hover:bg-primary-800',
    secondary: 'text-secondary-900 bg-secondary-300 hover:bg-secondary-400 group-hover:bg-secondary-400',
    outlined: 'text-gray-900 border-gray-200 bg-white hover:bg-gray-50 group-hover:bg-gray-50',
    sm: 'px-2.5 py-1.5 gap-2 text-xs',
    md: 'px-4 py-2 gap-3 text-base',
    lg: 'px-6 py-3 gap-4 text-base',
    smIcon: 'p-1.5',
    mdIcon: 'p-2',
    lgIcon: 'p-3',
  }
} %}

{# >>> Merge settings / data / classes #}
{% set props = {
  settings: settings is defined and settings is iterable ? compDefaults.settings | merge(settings) : compDefaults.settings,
  data: data is defined and data is iterable ? compDefaults.data | merge(data) : compDefaults.data,
  classes: classes is defined and classes is iterable ? compDefaults.classes | merge(classes) : compDefaults.classes,
  variants: compDefaults.variants,
} %}

{% if props.data.text or props.data.icon %}
  {% set tag = props.data.url ? 'a' : 'button' %}
  {% set attr = props.data.url ? 'href=' ~ props.data.url : 'type=button' %}

  <{{ tag }} {{ attr }} {{ props.data.url and props.data.target ? 'target=' ~ props.data.target : '' }}
  class="{{ props.settings.name }} {{ props.classes.root }} {{ props.classes.rounded }} {{ props.classes.display }} {{ props.variants[props.data.variant] }}  {{ props.variants[props.data.variantSize] }} {{ props.classes.custom }}">

  {# >>> If icon exists #}
  {% if props.data.icon %}
    {# >>> Render icon  #}
    {% include '_components/icon/icon.twig' with {
      data: {
        icon: props.data.icon ??? null,
        variant: props.data.iconSize
      },
      classes: {
        custom: (props.data.reverse ? 'order-2')
      }
    } only %}
  {% endif %}
    {{ props.data.text ??? null }}
  </{{ tag }}>
{% endif %}
